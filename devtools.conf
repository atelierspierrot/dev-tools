## DevTools configuration
##
## DevTools - Packages development & deployment facilities
## Copyleft (c) 2013 Pierre Cassat and contributors
## <www.ateliers-pierrot.fr> - <contact@ateliers-pierrot.fr>
## License GPL-3.0 <http://www.opensource.org/licenses/gpl-3.0.html>
## Sources <http://github.com/atelierspierrot/dev-tools>
##

## 
## This configuration file is for shell usage of 'devtools.sh' script and actions.
## Any variable, value pair must be written as shell: 'VAR=val' or 'VAR="val with space"'
##
## Each global script configuration value is named like 'DEFAULT_VARIABLE'
##
## Each action configuration value is named like 'DEFAULT_ACTION_VARIABLE',
## for instance: 'DEFAULT_SYNC_RSYNC_OPTIONS' 
##

## global config ##

# relative path from your project dir to the 'piwi-bash-library.sh'
DEFAULT_BASHLIBRARY_PATH=piwi-bash-library/piwi-bash-library.sh

# default project config file (DO NOT CHANGE after a first usage)
DEFAULT_USER_CONFIG_FILE=.devtools_globals

# default project config file (DO NOT CHANGE after a first usage)
DEFAULT_PROJECT_CONFIG_FILE=.devtools

## 'deploy' config ##

# default deployment environment name
DEFAULT_DEPLOY_ENV=default

## 'cleanup' config ##

# list of files to cleanup
# you can use wilcard '*' to build masks
DEFAULT_CLEANUP_NAMES=( .DS_Store .AppleDouble .LSOverride .Spotlight-V100 .Trashes Icon ._* *~ *~lock* Thumbs.db ehthumbs.db Desktop.ini .project .buildpath )

## 'flush' config ##

# list of dirnames to flush
# you can use wilcard '*' to build masks
DEFAULT_FLUSH_DIRNAMES=( tmp cache )

## 'fix-rights' config ##

# default rights to use for fix-rights
DEFAULT_FIXRIGHTS_DIRS_CHMOD=0775
DEFAULT_FIXRIGHTS_FILES_CHMOD=0644
DEFAULT_FIXRIGHTS_BIN_DIR=bin
#DEFAULT_FIXRIGHTS_BIN_MASK="*.sh"

## 'sync' config ##

# default synchronization method
# can be 'rsync' or 'ftp' (or 'ncftp' which is used anyway)
DEFAULT_SYNC_METHOD="rsync"

# default synchronization server name
# to use SSH with method `rsync`, write "-e ssh user@server.name:~/server/path/"
# to use the `ftp` method, write "-u USER -p PASSWORD -P PORT SERVERNAME REMOTEDIR"
# to use a host configuration file for the `ftp` method, write "-f FILENAME REMOTEDIR"
#DEFAULT_SYNC_SERVER=

# default synchronization 'rsync' command options
# use this to exclude files for instance
# change the default '-avrlzh' with caution
DEFAULT_SYNC_RSYNC_OPTIONS="-avrlzh"
DEFAULT_SYNC_RSYNC_ENV_OPTIONS="-avrlzh"

# default synchronization 'ftp' command options
DEFAULT_SYNC_FTP_OPTIONS="-R -m"
# use this to exclude files by name
DEFAULT_SYNC_FTP_EXCLUDED_FILES=()
# use this to exclude dirs by name from the root of the package
DEFAULT_SYNC_FTP_EXCLUDED_DIRS=()

# default environment to deploy for synchronization
# note that synchronization is not possible with 'ftp' method
#DEFAULT_SYNC_ENV=prod

## 'version-tag' config ##

# default branch to use for version tag
DEFAULT_VERSIONTAG_BRANCH=master

# default script hook called just BEFORE to create the tag
# use model `pre-tag-hook.sample`
#DEFAULT_VERSIONTAG_HOOK=pre-tag-hook.sh

## 'extract' config ##

# default "extract" action config
#DEFAULT_EXTRACT_BEGIN_MASK=
#DEFAULT_EXTRACT_END_MASK=
#DEFAULT_EXTRACT_SHOW_FILENAME=true

## 'md2man' config ##

# default source filename
DEFAULT_MD2MAN_SOURCE=MANPAGE.md

# default target manpage filename
#DEFAULT_MD2MAN_FILENAME=

# default 'markdown' binary to use
#DEFAULT_MD2MAN_MARKDOWN_BIN

## 'manpage' config ##

# default source filename
DEFAULT_MANPAGE_SOURCE=MANPAGE.md

# default target manpage filename
#DEFAULT_MANPAGE_FILENAME=

# default manpage type
DEFAULT_MANPAGE_SECTION=3

# default 'whatis' binary to use
#DEFAULT_MANPAGE_WHATIS_BIN

# default 'makewhatis' binary to use
#DEFAULT_MANPAGE_MAKEWHATIS_BIN

# default 'markdown' binary to use
#DEFAULT_MARKDOWN_MAKEWHATIS_BIN

## events config ##
# events triggering
# available events are: EVENT_PRE_action, EVENT_POST_action
#EVENT_PRE_CLEANUP="echo 'test'"
# you can use environment variables:
#EVENT_PRE_CLEANUP="./my-script.sh \"\$_TARGET\""
